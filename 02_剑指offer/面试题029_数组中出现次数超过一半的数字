

/*
 * Date:2021-02-07 13:12
 * Author:Gmrakari
 * Project:面试题029_数组中出现次数超过一半的数字
 * 
 */

数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,2,5,4}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。

示例1

输入
[1,2,3,2,2,2,5,4,2]

返回值
2

int MoreThanHalfNum(int* numbers,int length){
	if(CheckInvalidArray(numbers,length)){
		return 0;
	}

	int middle = length >> 1;
	int start = 0;
	int end = length - 1;
	int index = Partition(numbers,length,start,end);
	while(index != middle){
		if(index > middle){
			end = index - 1;
			index = Partition(numbers,length,start,end);
		}
		else{
			start = index + 1；
			index = Partition(numbers,length,start,end);
		}
	}

	int result = numbers[middle];
	if(!CheckMoreThanHalf(numbers,length,result))
		result = 0;

	return result;
}

bool g_bInputInvalid = false;

bool CheckInvalidArray(int* numbers,int length){
	g_bInputInvalid = false;

	if(numbers == NULL || length <= 0)
		g_bInputInvalid = true;

	return g_bInputInvalid;
}

bool CheckMoreThanHalf(int* numbers,int length,int number){
	int times = 0;
	for(int i = 0;i < length;++i){
		if(numbers[i] == number)
			times++;
	}

	bool isMoreThanHalf = true;
	if(times * 2 <= length){
		g_bInputInvalid = true;
		isMoreThanHalf = false;
	}

	return isMoreThanHalf;
}

解法二：根据数组特点找出O(n)的算法

数组中有一个数字出现的次数超过数组长度的一半，也就是说它出现的次数比其他所有数字出现的次数的和还要多。
因此我们可以考虑在遍历数组的时候保存两个值：一个是数组中的一个数字，一个是次数。
当我们遍历到下一个数字的时候，如果下一个数字和我们之前保存的数字相同，则次数加1；
如果次数为零，我们需要保存下一个数字，并把次数设为1.
由于我们要找的数字出现的次数比其他所有数字出现的次数之和还要多，那么要找的数字肯定是最后一次把次数设为1时对应的数字

int MoreThanHalfNum(int* numbers,int length){
	if(CheckInvalidArray(numbers,length))
		return 0;

	int result = numbers[0];
	int times = 1;
	for(int i = 1;i < length; ++i){
		if(times == 0){
			result = numbers[i];
			time = 1;
		}
		else if(numbers[i] == result)
			time++;
		else
			time--;
	}

	if(!CheckMoreThanHalf(numbers,length,result))
		result = 0;

	return result;
}





