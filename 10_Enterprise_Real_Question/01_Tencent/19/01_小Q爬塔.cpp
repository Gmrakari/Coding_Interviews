
/*
 * Date:2021-04-17 18:00
 * filename:小q爬塔.cpp
 */

/*
【题目描述】
小 Q 正在攀登一座宝塔，这座宝塔很特别，塔总共有 n 层，但是每两层之间的净高却不相同，
所以造成了小 Q 爬过每层的时间也不同。如果某一层的高度为 x，那么爬过这一层所需的时间也是 x。
小 Q 还会使用一种魔法,每用一次可以让他向上跳一层或两层,但是每次跳跃后小 Q 都将用完魔法力,必须
爬过至少一层才能再次跳跃(你可以认为小 Q 需要跳两次一层才休息，最后也可以跳到塔外即超过塔高，跳
是不消耗时间的)。

小 Q 想用最短的时间爬到塔顶,希望你能告诉他最短时间是多少.

输入描述:
第一行一个数 n (n<=10000),表示塔的层数.
接下来的 n 行每行一个数 h(1 <= h <=100),表示从下往上每层的高度.

输出描述:
一个数,表示最短时间
输入样例：
5
3
5
1
8
4
输出样例：
1

*/

/*
 *
 * p[i]表示到达第i层的最短时间,并且到达第i层的方式是爬
 * t[i]表示到达第i层的最短时间,并且到达第i层的方式是跳
 * 到达第i层的方式采用爬还是采用跳
 * 情况1:到达第i层的方式是爬:
 * 那么到达第i - 1层的方式可以是爬也可以是跳,从两者中选最小
 * p[i] = min{p[i - 1],t[i - 1]} + a[i];
 * 情况2:到达第i层的方式是跳
 * 那么可以从第i - 1层起跳,也可以从第i - 2层起跳.并且到达第i - 1层和i - 2层的方式只能选爬(到第i层是跳),所以再两者中选最小
 * t[i] = min{p[i - 1],p[i - 2]}
 * 最后在p[n]和t[n]中选最小者做结果
 *
 */

#include <bits/stdc++.h>
using namespace std;

int p[10005],t[10005];

int main()
{
	int n,m,x;
	cin >> n;
	for(int i = 1;i <= n;i++)
	{
		cin >> x;
		p[i] = min(p[i - 1],t[i - 1]) + x;
		if(i == 1) continue;
		t[i] = min(p[i - 1],p[i - 2]);
	}
	cout << min(p[n],t[n]) << endl;
	return 0;
}


