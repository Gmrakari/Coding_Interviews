

/*
 * Date:2020-07-21 06：55
 * Author:Gmrakari
 * Project:面试题11_数值地整数次方
 * 
 */

#题目描述

给定一个double类型的浮点数base和int类型的整数exponent。求base的exponent次方。

class Solution
{
public:
	double Power(double base,int exponent)
	{
		double result = 1.0;
		for(int i = 1;i <= exponent;++i)
		{
			result *= base;  
		}
		return result;
	}
};



当指数为负数的时候，可以先对指数求绝对值，然后算出次方的结果之后再取倒数。（注意0的0次方在数学上是没有意义的）

bool g_InvalidInput = false;

double Power(double base,int exponent)
{
	g_InvalidInput = false;

	if(equal(base,0,0) && exponent)
	{
		g_InvalidInput = true;
		return 0.0;
	}

	unsigned int absExponent = (unsigned int)(exponent);
	if(exponent < 0)
		absExponent = (unsigned int)(-exponent);

	double result = PowerWithUnsignedExponent(base,absExponent);

	if(exponent < 0)
		result = 1.0 / result;

	return result;
}

double PowerWithUnsignedExponent(double base,unsigned int exponent)
{
	double result = 1.0;
	for(int i = 1;i <= exponent;++i)
		result *= base;  
	return result;
}

bool equal(double num1,double num2)
{
	if((num1 - num2 > -0.0000001) && (num1 - num2 < 0.0000001))
		return true;
	else
		return false;
}


在判断底数base是不是等于0时，不能直接写base == 0,这是因为在计算机内表示小数时(包括float和double型小数)都有误差。
判断两个小数是否相等，只能判断它们之差的绝对值是不是在一个很小的范围内。
如果两个数相差很小，就可以认为它们相等，这就是我们定义函数equal的原因

#如果输入的指数exponent为32，在函数PowerWithUnsignedExponent的循环中需要做31次乘法
如果我们已经知道它的的16次方，那么只要在16次方的基础上再平方一次就可以了。

32次方只需要做5次乘法
1*2 = 2
2*2 = 4
4*2 = 8
8*2 = 16
16*2 = 32

公式:

	  / a^(n/2) * a^(n/2) 				  n为偶数
a^n =  
	  \ a^((n - 1) / 2) * a^((n - 1) / 2) n为奇数 

double PowerWithUnsignedExponent(double base,unsigned int exponent)
{
	if(exponent == 0)
		return 1;
	if(exponent == 1)
		return base;

	double result = PowerWithUnsignedExponent(base,exponent >> 1);
	result *= result;
	if(exponent & 0x1 == 1)
		result *= base;

	return result;
}

用右位移运算代替除以2，用位与与运算代替了求余运算符(%)来判断一个数是奇数还是偶数

注意两细节
1、判断base是否等于0
2、用位运算代替乘法及求余运算


