

/*
 * Date:2020-08-24 16：40
 * Author:Gmrakari
 * Project:面试题20_顺时针打印矩阵
 * 
 */


#题意

题目描述

题目描述

输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，

例如， 如果输入如下矩阵：

1 	2 	3 	4 
5 	6 	7 	8 
9  10  11  12 
13 14  15  16

则依次打印出数字

1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10


#思路
把矩阵想象成若干个圈。用一个循环来打印矩阵，每一次打印矩阵中的一个圈。

分析循环结束的条件。
假设这个矩阵的行数是rows，列数是columns。
打印一圈的左上角的坐标是(0,0)，第二圈的左上角的坐标是(1,1)
让循环继续的条件是colums > startX * 2 并且 rows > startY * 2

void PrintMatrixClockwisely(int** numbers,int columns,int rows)
{
	if(numbers == NULL || columns <= 0 || rows <= 0)
		return ;

	int start = 0;

	while(columns > start * 2 && rows > start * 2)
	{
		PrintMatriInCircle(numbers,columns,rows,start);
		++start;
	}
}

void PrintMatriInCircle(int** numbers,int columns,int rows,int start)
{
	int endX = columns - 1 - start;
	int endY = rows - 1 - start;


	//从左到右打印一行
	for(int i = start;i <= endX; ++i)
	{
		int number = numbers[start][i];
		printNumber(number);
	}

	//从上到下打印一列
	if(start < endY)
	{
		for(int i = start + 1;i <= endY; ++i)
		{
			int number = number[i][endX];
			printNumber(number);
		}
	}


	//从右到左打印一行
	if(start < endX && start < endY)
	{
		for(int i = endX - 1; i >= start ; --i)
		{
			int number = numbers[endY][i];
			printNumber(number);
		}
	}


	//从下到上打印一列
	if(start < endX && start < endY - 1 )
	{
		for(int i = endY - 1;i >= start + 1; --i)
		{
			int number = numbers[i][start];
			printNumber(number);
		}
	}
}

