

/*
 * Date:2021-04-06 09:58
 * Author:Gmrakari
 * Project:面试题063_二叉搜索树的第K个结点
 * 
 */

 #2 题意
题目描述

给定一颗二叉搜索树，请找出其中的第k大的结点。

例如， 5 / \ 3 7 /\ / 2 4 6 8 中 按结点数值大小顺序第三个结点的值为4

如果按照中序遍历的顺序遍历一颗二叉搜索树，遍历序列的数值是递增排序的。

例如 上面的二叉树中序遍历序列式{2,3,4,5,6,7,8}

因此，只需要中序遍历算法遍历一颗二叉搜索树，就很容易找出它的第k大的结点

BinaryTreeNode* KthNode(BinaryTreeNode* pRoot,unsigned int k)
{
	if(pRoot == NULL || k == 0)
		return NULL;

	return KthNodeCore(pRoot,k);
}

BinaryTreeNode* KthNodeCore(BinaryTreeNode* pRoot,unsigned int& k)
{
	BinaryTreeNode* target = NULL;

	if(pRoot->m_pLeft != NULL)
		target = KthNodeCore(pRoot->m_pLeft,k);

	if(target == NULL)
	{
		if( k == 1)
			target = pRoot;
			k--;
	}

	if(target == NULL && pRoot->m_pRight != NULL)
		target = KthNodeCore(pRoot->m_pRight,k);

	return target;
}
