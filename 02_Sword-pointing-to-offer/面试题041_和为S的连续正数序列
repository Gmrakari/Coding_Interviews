/*
 * Date:2021-03-01 09:45
 * Author:Gmrakari
 * Project:面试题041_和为S的连续正数序列
 */

#题意
题目描述

小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。
但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。
没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good Luck!

输出所有和为S的连续正数序列。序列内按照从小至大的顺序，序列间按照开始数字从小到大的顺序

输入描述

5

100

输出描述

2 3

9 10 11 12 13 14 15 16 18 19 20 21 22

bool FindNumbersWithSum(int data[],int length,int sum,int* num1,int* num2)
{
	*num1 = data[0];
	*num2 = data[length - 1];

	*num3 = *num1 + *num2;

	if(*num3 > sum)
	{
		*num2--;
	}
	else if(*num3 < sum)
	{
		*num1++;
	}
	else
		return true;
}

bool FindNumbersWithSum(int data[],int length,int sum,int* num1,int* num2)
{
	bool found = false;
	if(length < 1 || num1 == NULL || num2 == NULL)
		return found;

	int ahead = length - 1;
	int behind = 0;

	while(ahead > behind)
	{
		long long curSum = data[ahead] + data[behind];

		if(curSum == sum)
		{
			*num1 = data[behind];
			*num2 = data[ahead];
			found = true;
			break;
		}	
		else if(curSum > sum)
			ahead--;	
		else
			behind++;
	}
	return found;
}

题目二：
输入一个正数s,打印出所有和为s的连续正数序列(至少含有两个数)
例如输入15,由于1 + 2 + 3 + 4 + 5  = 4 + 5 + 6 = 7 + 8 = 15
所以结果打印出3个连续序列1 ~ 5，4 ~ 6 和 7 ~ 8

void FindContinuousSequence(int sum)
{
	if(sum < 3)
		return ;

	int small = 1;
	int big = 2;
	int middle = (1 + sum) / 2;
	int curSum = small + big;

	while(small < middle)
	{
		if(curSum == sum)
			PrintContinuousSequence(small,big);

		while(curSum > sum && small < middle)
		{
			curSum -= small;
			small++;

			if(curSum == sum)
				PrintContinuousSequence(small,big);
		}
		big++;
		curSum += big;
	}
}

void PrintContinuousSequence(int small,int big)
{
	for(int i = small; i <= big;++i)
		printf("%d",i);
	printf("\n");
}
