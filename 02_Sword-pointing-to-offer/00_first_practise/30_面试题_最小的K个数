


/*
 * Date:2021-02-16 11:31
 * Author:Gmrakari
 * Project:面试题030_最小的K个数
 * 
 */

#题意
题目描述

输入n个整数，找出其中最小的K个数。

例如输入4,5,1,6,2,7,3,8这8个数字， 则最小的4个数字是1,2,3,4,。

void GetLeastNumbers(int* input,int n,int* output,int k)
{
	if(input == NULL || output == NULL || k > n || n <= 0 || k <= 0)
		return ;

	int start = 0;
	int end = n - 1;
	int index = Partition(input,n,start,end);
	while(index != k - 1){
		if(index > k - 1)
		{
			end = index - 1;
			index = Partition(input,n,start,end);
		}
		else
		{
			start = index + 1;
			index = Partition(input,n,start,end);
		}
	}

	for(int i = 0;i < k;++i){
		output[i] = input[i];
	}
}

解法二：基于堆或者红黑树的思路

typedef multiset<int,greater<int> > 			intSet;
typedef multiset<int,greater<int> >::iterator 	setIterator;

void GetLeastNumbers(const vector<int>& data,intSet& leastNumbers,int k){
	leastNumbers.clear();

	if(k < 1 || data.size() < k)
		return ;

	vector<int>::const_iterator iter = data.begin();
	for(; iter != data.end(); ++iter)
	{
		if((leastNumbers.size() ) < k )
			leastNumbers.insert(*iter);

		else
		{
			setIterator iterGreatest = leastNumbers.begin();

			if(*iter < *(leastNumbers.begin()))
			{
				leastNumbers.erase(iterGreatest);
				leastNumbers.insert(*iter);
			}
		}
	}
}