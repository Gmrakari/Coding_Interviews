
/*
 * Date:2020-07-07 07:03
 * Author:Gmrakari
 * Project:面试题5_从尾到头打印链表
 * 
 */
	
/*
 链表结点定义
 */
struct ListNode
{
	int 	  m_nValue;
	ListNode* m_pNext;
};


#题意
题目描述

输入一个链表，从尾到头打印链表每个节点的值。

输入描述:

输入为链表的表头

输出描述:

输出为需要打印的“新链表”的表头


/*
 * 第一个遍历到的结点最后一个输出，最后一个遍历的结点第一个输出
 * 符合“后进先出”--栈的结构模型
 * 实现：每经过一个结点的时候，把该结点放到一个栈中。当遍历完整个链表后，再从栈顶开始逐个输出结点的值，此时输出的结点的顺序已经反过来了
 */

//解法一(栈)
void PrintListReversingly_Iteratively(ListNode* pHead)
{
	std::stack<ListNode*> nodes;

	ListNode* pNode = pHead;
	while(pNode != NULL)
	{
		nodes.push(pNode);
		pNode = pNode->m_pNext;
	}
	while(!nodes.empty())
	{
		pNode = nodes.top();
		printf("%d/t",pNode->m_nValue);
		nodes.pop();
	}
 }

//解法二(递归)
void PrintListReversingly_Recursively(ListNode* pHead)
{
	if(pHead != NULL)
	{
		if(pHead->m_pNext != NULL)
		{
			PrintListReversingly_Recursively(pHead->m_pNext);
		}
		printf("%d/t",pHead->m_nValue);
	}
}

/*
 *缺点:
 *当链表非常长的时候，就会导致函数调用的层级很深，从而有可能导致函数调用栈溢出。
 */