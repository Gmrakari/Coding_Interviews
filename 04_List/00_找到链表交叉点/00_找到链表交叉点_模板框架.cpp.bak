
#include <iostream>
using namespace std;

/*
 * Date:2021-03-06 08:30
 * Author:Gmrakari
 * Filename:Muban_找到链表交叉点.cpp
 *
 */

struct ListNode
{
	int m_nKey;
	ListNode* m_pNext;
};

ListNode* findFirstCommonNode(ListNode *pHead1,ListNode *pHead2)
{
	unsigned int GetListLength(ListNode* pHead);

}
unsigned int GetListLength(ListNode* pHead)
{
	
}

int main(int argc,const char* argv[])
{
	ListNode common[2];
	common[0].m_nKey = 6;
	common->m_pNext = &common[1];
	common[1].m_nKey = 7;
	common[1].m_pNext = NULL;

	ListNode left[3];
	left[0].m_nKey = 1;
	left[0].m_pNext = &left[1];
	
	left[1].m_nKey = 2;
	left[1].m_pNext = &left[2];

	left[2].m_nKey = 3;
	left[2].m_pNext = &common[0];


	ListNode right[2];
	right[0].m_nKey = 4;
	right[0].m_pNext = &right[1];

	right[1].m_nKey = 5;
	right[1].m_pNext = &common[0];


	unsigned int GetListLength(ListNode* pHead);

	ListNode* findFirstCommonNode(ListNode *pHead1,ListNode *pHead2);

	ListNode *node;

	node = findFirstCommonNode(right,left);
	while(node != NULL)
	{
		cout << node->m_nKey << ' ';
		node = node->m_pNext;
	}
	cout << endl;
	return 0;
}
